package main

import "fmt"

func main() {

	//learn from [cc] master
	//go 语言设计目的  Google 内部标准编程语言  约定俗成
	//C++ 必须有性能的保障的部分  如搜索引擎
	//Java 复杂业务逻辑
	//Python 迭代很快 大量内部工具
	//Go 新的内部工具  及其他业务模块
	//如果有一门语言像c/c++那样的性能 可以做系统开发 但是没有繁琐的类型                      有简单统一化模块依赖管理  编译速度飞快
	//如果有一门语言像java那样拥有垃圾回收机制（gc  慢啊~~）                               但是更快对业务的影响更小
	//如果有一门语言像python那样简单易学 拥有灵活的类型 支持函数式编程 异步IO（没有静态类型检查）但是有编译器进行静态类型检查


	//go语言解决了上述痛点   这个时候go语言就诞生了
	//go语言特点：  CSP模型使用channel对goroutine之间进行通信  是一篇学术论文   不需要锁不需要callback
	//类型检查 编译时
	//运行环境 编译成机器代码直接运行
	//编程范式 面向接口 函数式编程 并发编程



	fmt.Print("hi play go again!")
}
